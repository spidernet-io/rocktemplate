// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2022 Authors of spidernet-io
// SPDX-License-Identifier: Apache-2.0

package healthy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetHealthyLivenessHandlerFunc turns a function with the right signature into a get healthy liveness handler
type GetHealthyLivenessHandlerFunc func(GetHealthyLivenessParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetHealthyLivenessHandlerFunc) Handle(params GetHealthyLivenessParams) middleware.Responder {
	return fn(params)
}

// GetHealthyLivenessHandler interface for that can handle valid get healthy liveness params
type GetHealthyLivenessHandler interface {
	Handle(GetHealthyLivenessParams) middleware.Responder
}

// NewGetHealthyLiveness creates a new http.Handler for the get healthy liveness operation
func NewGetHealthyLiveness(ctx *middleware.Context, handler GetHealthyLivenessHandler) *GetHealthyLiveness {
	return &GetHealthyLiveness{Context: ctx, Handler: handler}
}

/*
	GetHealthyLiveness swagger:route GET /healthy/liveness healthy getHealthyLiveness

# Liveness probe

pod liveness probe for agent and controller pod
*/
type GetHealthyLiveness struct {
	Context *middleware.Context
	Handler GetHealthyLivenessHandler
}

func (o *GetHealthyLiveness) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetHealthyLivenessParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
